// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the “License”);
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// <https://apache.org/licenses/LICENSE-2.0>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import JSBI from '../jsbi.mjs';

{
  // Test the example from the README.
  const max = JSBI.BigInt(Number.MAX_SAFE_INTEGER);
  // → 9007199254740991
  const other = JSBI.BigInt(2);
  const result = JSBI.add(max, other);
  // → 9007199254740993
  console.assert('9007199254740993' === result.toString());
  // Test `JSBI.toNumber` as well.--
  console.assert(9007199254740993 === JSBI.toNumber(result));
}

const TESTS = [
  // {
  //   operation: 'add',
  //   a: '-0xF72AAE64D54951CAE560D9B4531CE6CF02426F8CD601B77',
  //   b: '-0xF3CF5EDD759DBCC7449962CDB52AE0295BE7306D51555C70',
  //   expected: '-0x1034209C3C2F251E3F2EF7068FA5CAE964C0B57661EB577E7',
  // },
  // { // https://github.com/GoogleChromeLabs/jsbi/pull/14
  //   operation: 'remainder',
  //   a: '0x62A49213A5CD1793CB4518A12CA4FB5F3AB6DBD8B465D0D86975CEBDA6B6093',
  //   b: '0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',
  //   expected: '0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE',
  // },
  // { // https://github.com/GoogleChromeLabs/jsbi/pull/14#issuecomment-439484605
  //   operation: 'remainder',
  //   a: '0x10000000000000000',
  //   b: '0x100000001',
  //   expected: '0x1',
  // },
  // { // https://github.com/GoogleChromeLabs/jsbi/issues/44#issue-630518844
  //   operation: 'bitwiseAnd',
  //   a: '0b10000010001000100010001000100010001000100010001000100010001000100',
  //   b: '-0b10000000000000000000000000000000000000000000000000000000000000001',
  //   expected: '0b10001000100010001000100010001000100010001000100010001000100',
  // },
  // { // https://github.com/GoogleChromeLabs/jsbi/issues/44#issue-630518844
  //   operation: 'bitwiseXor',
  //   a: '0',
  //   b: '-0b1111111111111111111111111111111111111111111111111111111111111111',
  //   expected: '-0b1111111111111111111111111111111111111111111111111111111111111111',
  // },
  {
    operation: 'powMod',
    a: '190380123980120129571205712057015712905721571205791204571205712093842901381209481208038120981', 
    b: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
    c: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
    expected: '0x5c3cdbefe1b5a7c3e9faba7879ad1fcdfe474817ff01e43f079adc383d8edf98e7dfd91b1d31c6b61a9db8cd3eb0c7a9dd547f3ae1951a39a22dc263da454f5d117b2e41f5358c4b651b09eac4d6e22a5f1e33609411a3e54ff9c66cf552cadf0188f2eeeba2af26d28a76f7fb12d869b7449906db3760480d109ec4503e11c6154cda877e431912e5852729cb02b97394962016127c0842c9416e40f7c613acd783656e234aefc9c166452573942eebd3352ac22ada687da7962bfce86547eab08653b2ec832466cfb7d630ab913bbbc6f72c4a78b9b4c42a38b42016ca7b8b550901257c0061a939435e210ffdea8952180ce28f6ea56a9ff19d08452839dd2f06e94dcd009f4a2a2a3cc925bf6b71ecc7012852f63f18e05612c723635929638ec873f70cc7c70587b5e9a807e088e7bc0db4f4db4484b6e8ae8df9d97b0cc81346c7ef4264980bf6752122eaa9a508e6d3a4f32695abe793b3fe6ee71092dc0ae55b3151f4111d5dcaaed26124d266e9e8b97df2c319b82429cea842c0bbf3666a1f5e913bcc69cf3b13de1dfecd38a36f192a5692e82cf92d7c7fe2a3e50805b4cf539fb71fe51be68d4a23376777f33f08ea9f88accbee58a312c85156a37b5cfbceba6a999dc683e013e0631dc2e2461a319ba3ee85509e2364016664bdd601cd49400c42561153e2eaf54a1691a27397812c00469cec5a7e4306f99a',
  },

  {
    operation: 'modInverse',
    a: '2147483649', 
    b: '429496729987',
    c: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
    expected: '0x3cf66ac8ca',
  },

  // {
  //   operation: 'modInverse',
  //   a: '4294967297', 
  //   b: '4294967299',
  //   c: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
  //   expected: '12',
  // },

  {
    operation: 'modInverse',
    a: '190380123980120129571205712057015712905721571205791204571205712093842901381209481208038120981', 
    b: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
    c: '0x8875083ea21c289bb9ca5164d8fbd4f4e4a698647f958bd0fc15d56531db8f2fcf119e093291e3ee6132acbf370a63391d9244818e5eff44109739b31cd795207bf4fed41d0d6c300c4ca1c923c04c3bdfa94618a0f48acda0636b7a82c5aed8f8f8c18a093cbe026bebf681cfb97dad057682c920f757aba965c3c86af56077b27ff0f28c837048ae54638350f34ad6aea6c46ff1021e9f89ce034ab42b9846e885b8c2c424b45a0acf3eac419ff993fb70ea734b1f6f210cc95682e76eeea1ccaddf0dd4b67f946e814b04e96880c29a69adff950129e0159656386caa2578266759c1f7541a4005bbd58c4198ef473eeeff487ec842b56fa7add7c7c853b01eb89e6ff1cc4c3a006c9112f1813e218ed48a69cdbfc0a1be5320a1fb57c1efdc39b5055e9ee4f717a82ca29b38d398304904d4c66b2ac4ad40b86f4020cf16e63337afe117566410dcf5e6ff42f0c94cba27275ae10b5274ca8311fa2de4fab19bfed9685c77fd8dd8a555b9f730a29c4251be81292c602fa599d9edd77e3e0f3a25a293370152344ca8e70344f794eeaa80dc40946c46868dd03cfb47ecaf3ad7a157750d2d03e7d2fef7e25cc4fb85e1e4818ad444e8abbf18374caf564070360b24c346c61df6a8860459fd6e00ee771ddca3a38e92bc75188d8fd93aaf1e309410cdd048577a13f9d2fa2cb27374346f70fe32823b6ba91e10307eb979',
    expected: '0x82f7809a97ee1d3e70137546aeef815dbf7df81c18053b055daded75eacf3a9dbf9acc235a07a9d30e846abb5a946238f92ec1174d1057ed6322055397e092b25513df9cf5e38f52de564474f93e66f1384ccda79d6607b55e072a02cc7d7d650181e9f9780143db798583d78c7fa71ff5f53778fc2b2e48e3c3d3f5bc81c2aff868c30f129bee1515802c92ad88f7a96d99adcb315f3916efec1ee4052448a47e7556328ab313bd95e9bd6cf1819e992db6595bc050b4dee5d24a1cbe97d6c1c86b8c52bcd8132e3d3c2c412597753eed73852945b4ef67fb77cd2d73a67c58e9ac803ba8ce34260784dedfdfffc1da892f4a3b8ddc8d5a412442760dc264c49014e7b2e12f3e4ae51180e556422b5d009c20aba6a18af10c4b965fb6a547347c2245c079cba64fe7cb9659dc8158668cdae33b8850fc133b1599745a6b1683ba0805f008128343d728d06f00a9eb670cef35c8cfa581ac9f2716a140da598d7da32e8317c7c6df16ae204db29f27f1babc00432e9db2cbc5b4f1f58b1c8b49997e11c69a27cb5c7f424fee87b6bed5b23501630f4119d5ff1e329d89f5063ff32a47b0f61a2d59be76b0ef7e612af273e3005264705d450d9fb16ab3beb93e09a1a8864d093028ada287c9ad137e006020fe2e88e597bda0a237f5050abf5d43d2175e53372536544d01885ab4078cf438b8fee4a184bd7ec89b9134ebb3ff',
  },
];

// https://github.com/GoogleChromeLabs/jsbi/issues/36
(function() {
  const VALID = ['123', ' 123 ', '   123   '];
  const INVALID = ['x123', 'x 123', ' 123x', '123 x', '123  xx', '123 ?a'];
  for (const v of VALID) {
    const result = JSBI.BigInt(v);
    console.assert(JSBI.equal(result, JSBI.BigInt(123)));
  }
  for (const i of INVALID) {
    try {
      const result = JSBI.BigInt(i);
      throw "unreachable";
    } catch (exception) {
      console.assert(exception instanceof SyntaxError);
    }
  }
})();

function parse(string) {
  if (string.charCodeAt(0) === 0x2D) { // '-'
    const result = JSBI.BigInt(string.slice(1));
    result.sign = true;
    return result;
  }
  return JSBI.BigInt(string);
}

function hex(jsb) {
  if (JSBI.lessThan(jsb, 0)) {
    return `-0x${ jsb.toString(16).slice(1).toUpperCase() }`;
  }
  return `0x${ jsb.toString(16).toUpperCase() }`;
}

for (const test of TESTS) {
  const {operation} = test;
  const a = parse(test.a);
  const b = parse(test.b);
  const c = parse(test.c);

  const expected = parse(test.expected);
  const result = JSBI[operation](a, b, c);
  console.assert(
    JSBI.equal(result, expected),
    `
      Unexpected result.
      ${ hex(a) } ${ operation } ${ hex(b) }
      Expected: ${ hex(expected) }
      Actual:   ${ hex(result) }
    `.trim().replace(/\t/g, '')
  );
}
